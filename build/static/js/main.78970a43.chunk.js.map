{"version":3,"sources":["components/NavBar.js","components/ProjectTaskItem.js","components/ProjectTasks.js","actions/ProjectTaskActions.js","actions/types.js","components/AddProjectTask.js","reducers/errorsReducer.js","reducers/ProjectTaskReducer.js","reducers/index.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","type","data-toggle","data-target","Component","ProjectTaskItem","project_task","this","props","id","summary","acceptanceCriteria","ProjectTasks","console","log","getBackLog","BoardContent","project_tasks","todoItems","inProgressItems","doneItems","length","role","tasks","map","key","i","status","push","Fragment","BoardAlgorithm","to","connect","state","dispatch","a","axios","get","res","payload","data","AddProjectTask","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","newProjectTask","addProjectTask","history","placeholder","errors","post","response","initialState","error","combineReducers","action","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.78970a43.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class NavBar extends Component {\r\n    render() {\r\n        return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                Project Task Tool\r\n            </a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n        </div>\r\n    </nav>\r\n    );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class ProjectTaskItem extends Component {\r\n    render() {\r\n        const { project_task } = this.props;\r\n        return (\r\n          <div className=\"card mb-1 bg-light\">\r\n            <div className=\"card-header text-primary\">ID: {project_task.id}</div>\r\n            <div className=\"card-body bg-light\">\r\n              <h5 className=\"card-title\">{project_task.summary}</h5>\r\n              <p className=\"card-text text-truncate \">\r\n                {project_task.acceptanceCriteria}\r\n              </p>\r\n              <a href=\"\" className=\"btn btn-primary\">\r\n                View / Update\r\n              </a>\r\n    \r\n              <button\r\n                className=\"btn btn-danger ml-4\"\r\n\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport ProjectTaskItem from './ProjectTaskItem';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBackLog } from \"../actions/ProjectTaskActions\";\r\n\r\nclass ProjectTasks extends Component {\r\n    componentDidMount()\r\n    {\r\n        console.log(this.props.getBackLog())\r\n    }\r\n    render() {\r\n        \r\n    \r\n            const { project_tasks } = this.props.project_tasks;\r\n        \r\n            let BoardContent;\r\n            let todoItems = [];\r\n            let inProgressItems = [];\r\n            let doneItems = [];\r\n        \r\n            const BoardAlgorithm = project_tasks => {\r\n              if (project_tasks.length < 1) {\r\n                return (\r\n                  <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                    No Project Tasks on this board\r\n                  </div>\r\n                );\r\n              } else {\r\n                const tasks = project_tasks.map(project_task => (\r\n                  <ProjectTaskItem key={project_task.id} project_task={project_task} />\r\n                ));\r\n        \r\n                for (let i = 0; i < tasks.length; i++) {\r\n                  if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n                    todoItems.push(tasks[i]);\r\n                  }\r\n        \r\n                  if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n                    inProgressItems.push(tasks[i]);\r\n                  }\r\n        \r\n                  if (tasks[i].props.project_task.status === \"DONE\") {\r\n                    doneItems.push(tasks[i]);\r\n                  }\r\n                }\r\n        \r\n                return (\r\n                  <React.Fragment>\r\n                    <div className=\"container\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                          <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                              <h3>TO DO</h3>\r\n                            </div>\r\n                          </div>\r\n        \r\n                          {todoItems}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                              <h3>In Progress</h3>\r\n                            </div>\r\n                          </div>\r\n        \r\n                          {inProgressItems}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                              <h3>Done</h3>\r\n                            </div>\r\n                          </div>\r\n        \r\n                          {doneItems}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </React.Fragment>\r\n                );\r\n              }\r\n            };\r\n        \r\n            BoardContent = BoardAlgorithm(project_tasks);\r\n        \r\n            return (\r\n              <div className=\"container\">\r\n                <Link to=\"/addtask\" className=\"btn btn-primary mb-3\">\r\n                  <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n                {BoardContent}\r\n              </div>\r\n            );\r\n          }\r\n        };      \r\n\r\nProjectTasks.propTypes = {\r\n    getBackLog: PropTypes.func.isRequired,\r\n    project_tasks: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    project_tasks: state.project_task\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { getBackLog }\r\n  )(ProjectTasks);","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROJECT_TASKS,\r\n  DELETE_PROJECT_TASK,\r\n  GET_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (project_task, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"https://projet-tasks-spring.herokuapp.com/tasks/add\", project_task);\r\n    history.push(\"/\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBackLog=()=> async dispatch =>{\r\n    const res= await axios.get(\"https://projet-tasks-spring.herokuapp.com/tasks/all\");\r\n    dispatch({\r\n        type:GET_PROJECT_TASKS,\r\n        payload:res.data\r\n    });\r\n}","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECT_TASKS=\"GET_PROJECT_TASKS\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProjectTask } from \"../actions/ProjectTaskActions\";\r\n\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\"\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status\r\n    };\r\n     console.log(newProjectTask);\r\n    this.props.addProjectTask(newProjectTask, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"addProjectTask\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/\" className=\"btn btn-light\">\r\n                Back to Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                Add /Update Project Task\r\n              </h4>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"summary\"\r\n                    value={this.state.summary}\r\n                    placeholder=\"Project Task summary\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = { error: \"test error\" };\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n    GET_PROJECT_TASKS,\r\n    DELETE_PROJECT_TASK,\r\n    GET_PROJECT_TASK\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n     case GET_PROJECT_TASKS:\r\n        return {\r\n          ...state,\r\n          project_tasks: action.payload\r\n        };\r\n  /*\r\n      case GET_PROJECT_TASK:\r\n        return {\r\n          ...state,\r\n          project_task: action.payload\r\n        };\r\n  \r\n      case DELETE_PROJECT_TASK:\r\n        return {\r\n          ...state,\r\n          project_tasks: state.project_tasks.filter(\r\n            project_task => project_task.id !== action.payload\r\n          )\r\n        };*/\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { combineReducers } from \"redux\";\r\nimport errorsReducer from \"./errorsReducer\";\r\nimport projectTaskReducer from \"./ProjectTaskReducer\";\r\n\r\nexport default combineReducers({\r\n  //\r\n  errors: errorsReducer,\r\n  project_task: projectTaskReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\"; //dispatch actions\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nlet store;\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport ProjectTasks from './components/ProjectTasks';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport AddProjectTask from './components/AddProjectTask';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path=\"/\" component={ProjectTasks} />\n        <Route exact path=\"/addtask\" component={AddProjectTask} />\n      </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}